{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://waveforge.dev/schemas/current_task_update_request.schema.json",
  "title": "Current Task Update Request",
  "description": "Request schema for current_task_update MCP tool",
  "type": "object",
  "properties": {
    "update_type": {
      "type": "string",
      "enum": ["plan", "step", "evr"],
      "description": "Type of update: plan=plan level, step=step level, evr=EVR level"
    },
    "plan_id": {
      "type": "string",
      "pattern": "^plan-\\d+$",
      "description": "Plan ID for plan-level updates"
    },
    "step_id": {
      "type": "string",
      "pattern": "^step-\\d+$",
      "description": "Step ID for step-level updates"
    },
    "status": {
      "type": "string",
      "enum": ["to_do", "in_progress", "completed", "blocked"],
      "description": "New status"
    },
    "notes": {
      "type": "string",
      "maxLength": 2000,
      "description": "Completion notes (required when completing)"
    },
    "evidence": {
      "type": "string",
      "maxLength": 500,
      "description": "Evidence link (optional)"
    },
    "project_id": {
      "type": "string",
      "pattern": "^[0-9A-HJKMNP-TV-Z]{26}$",
      "description": "Project ID (optional, overrides default binding)"
    },
    "evr": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "evr_id": {
                "type": "string",
                "pattern": "^evr-\\d+$"
              },
              "status": {
                "type": "string",
                "enum": ["pass", "fail", "skip", "unknown"]
              },
              "last_run": {
                "type": "string",
                "format": "date-time"
              },
              "notes": {
                "type": "string",
                "maxLength": 2000
              },
              "proof": {
                "type": "string",
                "maxLength": 500
              }
            },
            "required": ["evr_id", "status", "last_run"]
          },
          "minItems": 1
        }
      },
      "required": ["items"],
      "description": "EVR update items (for update_type=evr)"
    }
  },
  "required": ["update_type", "status"],
  "allOf": [
    {
      "if": {
        "properties": {
          "update_type": {
            "const": "plan"
          }
        }
      },
      "then": {
        "required": ["plan_id"]
      }
    },
    {
      "if": {
        "properties": {
          "update_type": {
            "const": "step"
          }
        }
      },
      "then": {
        "required": ["step_id"]
      }
    },
    {
      "if": {
        "properties": {
          "update_type": {
            "const": "evr"
          }
        }
      },
      "then": {
        "required": ["evr"]
      }
    },
    {
      "if": {
        "properties": {
          "status": {
            "const": "completed"
          }
        }
      },
      "then": {
        "required": ["notes"]
      }
    }
  ]
}
